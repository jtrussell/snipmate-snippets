# Misc
snippet strict
	'use strict';
# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} =
	function(${4:/*arg*/}) {
	  ${5:/*code*/}
	}${3:;}${6}
# Function
snippet fun
	function ${1:function_name} (${2:/*args*/}) {
	  ${3:/*code*/}
	}
# Closure
snippet fc
	(function(${2:that}) {
	  ${4:/*code*/}
	}(${1:this}))${3:;}
# Anonymous Function
snippet f
	function(${1:/*args*/}) {
	  ${3:/*code*/}
	}${2:;}
# if
snippet if
	if(${1:/*condition*/}) {
	  ${2:/*code*/}
	}
# if ... else
snippet ife
	if (${1:true}) {${2}}
	else{${3}}
# tertiary conditional
snippet t
	${1:/*condition*/} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:/*expression*/}) {
	  case '${3:case}':
	    ${4:/*code*/}
	    break${5:;}
	  ${6}
	  default:
	    ${2:/*code*/}
	}
# case
snippet case
	case '${1:case}':
	  ${2:/*code*/}
	  break${3:;}
# for (...) {...} (Optimised for For-Loop)
snippet for
	for(${1:i} = ${2:/*iterable*/}.length; $1--;) {
	  ${3:/*code*/}
	}
# for (...) {...} (Improved Native For-Loop)
snippet forf
	for(${1:i} = 0; $1 < ${2:/*count*/}; $1++) {
	  ${3:/*code*/}
	}
# while (...) {...}
snippet wh
	while(${1:/*condition*/}) {
	  ${2:/*code*/}
	}
# do...while
snippet do
	do {
	  ${3:/*code*/}
	} while(${1:/*condition*/})${2:;}
# Object Method
snippet :f
	${1:method_name}: function(${2:attribute}) {
	  ${4:/*code*/}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function() {
	  ${2: /*code*/}
	}, ${1:/*wait*/})${3:;}
# Dash line
snippet dash
	// -----------------------------------------------------
	// ${1}
	// -----------------------------------------------------
# Get Elements
snippet get
	getElementsBy${1:TagName}('${2}')
# Get Element
snippet gett
	getElementBy${1:Id}('${2}')
# jQuery Select
snippet jq
	jQuery('${1:selector}')
# -------------------------------------
# JAKE
# -------------------------------------
# desc
snippet desc
	desc('${1}')${2:;}
# task
snippet task
	task('${1}', [${2}], function() {
	  ${4:/*code*/}
	})${3:;}
# -------------------------------------
# NODEJS
# -------------------------------------
snippet log
	console.log(${1:'Hello World'})${2:;}
snippet dir
	console.dir(${1:obj}, ${2:false}, ${3:2})${4:;}
snippet req
	require('${1}')
# -------------------------------------
# Grunt
# -------------------------------------
snippet gruntfile
	module.exports = function(grunt) {

	  // Project configuration
	  grunt.initConfig({
	    pkg: grunt.file.readJSON('package.json'),
	    jshint: {
	      options: {
	        jshintrc: '.jshintrc'
	      },
	      gruntfile: ['Gruntfile.js']
	    }
	  });

	  // Load plugins
	  require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);

	  // Register task(s)
	  grunt.registerTask('default', [
	    'jshint'
	  ]);

	};
# -------------------------------------
# Jasmine/Mocha
# -------------------------------------
snippet it
	it('should ${1:<...>}', function() {
	  ${2:<...>}
	});
snippet describe
	describe('${1:<...>}', function() {
	  ${2:<...>}
	});
